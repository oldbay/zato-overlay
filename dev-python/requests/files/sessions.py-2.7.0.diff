--- requests/sessions.py.orig	2015-08-20 23:40:49.804271155 +0200
+++ requests/sessions.py	2015-08-20 23:42:56.128273198 +0200
@@ -283,7 +283,7 @@
         'max_redirects',
     ]
 
-    def __init__(self):
+    def __init__(self, pool_connections=300, pool_maxsize=500):
 
         #: A case-insensitive dictionary of headers to be sent on each
         #: :class:`Request <Request>` sent from this
@@ -331,8 +331,8 @@
 
         # Default connection adapters.
         self.adapters = OrderedDict()
-        self.mount('https://', HTTPAdapter())
-        self.mount('http://', HTTPAdapter())
+        self.mount('https://', HTTPAdapter(pool_connections=pool_connections, pool_maxsize=pool_maxsize))
+        self.mount('http://', HTTPAdapter(pool_connections=pool_connections, pool_maxsize=pool_maxsize))
 
         # Only store 1000 redirects to prevent using infinite memory
         self.redirect_cache = RecentlyUsedContainer(REDIRECT_CACHE_SIZE)
@@ -566,6 +566,9 @@
         # Get the appropriate adapter to use
         adapter = self.get_adapter(url=request.url)
 
+        zato_pre_request_data = {'session':self, 'request':request, 'kwargs':kwargs}
+        dispatch_hook('zato_pre_request', hooks, zato_pre_request_data)
+
         # Start time (approximately) of the request
         start = datetime.utcnow()
 
@@ -671,7 +674,7 @@
             self.redirect_cache[redirect] = to
 
 
-def session():
+def session(*args, **kwargs):
     """Returns a :class:`Session` for context-management."""
 
     return Session()
